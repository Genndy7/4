#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <string>

using namespace std;

struct Ребенок {
    string фамилия;
    string адрес;
    char пол;
    int дней_отсутствия;
};

using База_Данных_Детей = vector<Ребенок>;

void загрузитьДанныеИзФайла(База_Данных_Детей& дети, const string& имя_файла) {
    ifstream файл(имя_файла, ios::binary);
    if (файл.is_open()) {
        Ребенок ребенок;
        while (файл.read(reinterpret_cast<char*>(&ребенок), sizeof(Ребенок))) {
            дети.push_back(ребенок);
        }
        файл.close();
    } else {
        cout << "Ошибка открытия файла: " << имя_файла << endl;
    }
}

void сохранитьДанныеВФайл(const База_Данных_Детей& дети, const string& имя_файла) {
    ofstream файл(имя_файла, ios::binary | ios::trunc);
    if (файл.is_open()) {
        for (const auto& ребенок : дети) {
            файл.write(reinterpret_cast<const char*>(&ребенок), sizeof(Ребенок));
        }
        файл.close();
    } else {
        cout << "Ошибка открытия файла: " << имя_файла << endl;
    }
}

void добавитьДанныеВФайл(const Ребенок& ребенок, const string& имя_файла) {
    ofstream файл(имя_файла, ios::binary | ios::app);
    if (файл.is_open()) {
        файл.write(reinterpret_cast<const char*>(&ребенок), sizeof(Ребенок));
        файл.close();
    } else {
        cout << "Ошибка открытия файла: " << имя_файла << endl;
    }
}

void сортироватьПоФамилии(База_Данных_Детей& дети) {
    sort(дети.begin(), дети.end(), [](const Ребенок& a, const Ребенок& b) {
        return a.фамилия < b.фамилия;
    });
}

Ребенок найтиСамогоБольногоРебенка(const База_Данных_Детей& дети) {
    Ребенок самыйБольной = дети[0];
    for (size_t i = 1; i < дети.size(); ++i) {
        if (дети[i].дней_отсутствия > самыйБольной.дней_отсутствия) {
            самыйБольной = дети[i];
        }
    }
    return самыйБольной;
}

void списокДетейПоАдресу(const База_Данных_Детей& дети, const string& адрес) {
    cout << "Дети, живущие по адресу " << адрес << ":" << endl;
    for (const auto& ребенок : дети) {
        if (ребенок.адрес == адрес) {
            cout << "- " << ребенок.фамилия << endl;
        }
    }
}

int подсчетПосещаемостиПоПолу(const База_Данных_Детей& дети, char пол) {
    int всегодней = 0;
    for (const auto& ребенок : дети) {
        if (ребенок.пол == пол) {
            всегодней += ребенок.дней_отсутствия;
        }
    }
    return всегодней;
}

int main() {
    База_Данных_Детей дети;
    int выбор;
    string имя_файла, адрес;
    Ребенок ребенок;

    do {
        cout << "Выберите действие:" << endl;
        cout << "1. Загрузить данные из файла" << endl;
        cout << "2. Сохранить данные в файл" << endl;
        cout << "3. Добавить новые данные в файл" << endl;
        cout << "4. Сортировать базу данных по фамилии" << endl;
        cout << "5. Найти самого больного ребенка" << endl;
        cout << "6. Список детей по адресу" << endl;
        cout << "7. Определить, кто болеет чаще: мальчики или девочки" << endl;
        cout << "0. Выход" << endl;
        cout << "Ваш выбор: ";
        cin >> выбор;

        switch (выбор) {
        case 1:
            cout << "Введите имя файла: ";
            cin >> имя_файла;
            загрузитьДанныеИзФайла(дети, имя_файла);
            break;
        case 2:
            cout << "Введите имя файла: ";
            cin >> имя_файла;
            сохранитьДанныеВФайл(дети, имя_файла);
            break;
        case 3:
            cout << "Введите фамилию: ";
            cin >> ребенок.фамилия;
            cout << "Введите адрес: ";
            cin >> ребенок.адрес;

            cout << "Введите пол (M/F): ";
            cin >> ребенок.пол;
            cout << "Введите дней отсутствия: ";
            cin >> ребенок.дней_отсутствия;
            cout << "Введите имя файла: ";
            cin >> имя_файла;
            добавитьДанныеВФайл(ребенок, имя_файла);
            break;
        case 4:
            сортироватьПоФамилии(дети);
            break;
        case 5:
            cout << "Самый больной ребенок: " << найтиСамогоБольногоРебенка(дети).фамилия << endl;
            break;
        case 6:
            cout << "Введите адрес: ";
            cin >> адрес;
            списокДетейПоАдресу(дети, адрес);
            break;
        case 7:
            cout << "Общее количество дней отсутствия у мальчиков: " << подсчетПосещаемостиПоПолу(дети, 'M') << endl;
            cout << "Общее количество дней отсутствия у девочек: " << подсчетПосещаемостиПоПолу(дети, 'F') << endl;
            break;
        }
    } while (выбор != 0);

    return 0;
}
